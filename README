shaul_ro

====================
=  README for ex3  =
====================

-----------------------------
-    Answers to questions   -
-----------------------------
result table:
╔═══════════════════════════╦═══════════════════════════════╦══════════╗
║            big            ║             small             ║          ║
╠════════════╦══════════════╬══════════════╦════════════════╣          ║
║ *          ║ +            ║ *            ║              + ║          ║
╠════════════╬══════════════╬══════════════╬════════════════╬══════════╣
║ 13.3322sec ║ 0.0658761sec ║ 3.653e-05sec ║ 0.000129028sec ║ Parallel ║
╠════════════╬══════════════╬══════════════╬════════════════╬══════════╣
║ 51.8733sec ║ 0.112777sec  ║ 2.459e-06sec ║ 2.925e-06sec   ║ Serial   ║
╚════════════╩══════════════╩══════════════╩════════════════╩══════════╝

1. When working on a small matrices they both work extremly fast but the parallel addition and
   multiplication works abit slower. I believe it's because creating and deleting the thread
   objects takes more time than actually computing the result matrix.
   Notice that when multiplying the small matrices the difference becomes smaller since there
   needs to be more work done by the threads and thus their speed comes to play.
   When working on the big matrices the difference is substantial, the parallel programming 
   gets the result alot faster than the normal serial computation, especially in the 
   multiplication.

2. There is a difference between the multiplication and the addition sice computing a single 
   row in the addition result matrix take O(number of collumns of the result matrix) while 
   the multiplication is
   O(number of collumns of the result matrix * number of rows of the left matrix).

